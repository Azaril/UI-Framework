#if 0
//
// Generated by 2.0.21119.0
//
//   fxc /T vs_3_0 /Fh headers/d3dx/vs_3_0.h /Vn g_vs_3_0 vertex_shader.hlsl
//
//
// Parameters:
//
//   float4x4 transform;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   transform    c0       4
//

// Shader type: vertex 

xvs_3_0
defconst transform, float, matrix_columns, [4, 4], c0-3
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1.xy
dcl_texcoord2 o2.xy


    exec
    vfetch r3.xy__, r0.x, texcoord
    vfetch r1, r0.x, texcoord1
    vfetch r0.__xy, r0.x, texcoord2
    vfetch r0.xy__, r0.x, texcoord3
    alloc position
    exec
    mad r2, r3.y, c1, c2
    mad r2, r3.x, c0, r2
    add oPos, r2, c3
    alloc interpolators
    exece
    mov o1.xy, r0.zw
    mov o2.xy, r0.xy
    mov o0, r1

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD g_vs_3_0[] =
{
    0x102a1101, 0x000000d8, 0x000000a8, 0x00000000, 0x00000024, 0x00000000, 
    0x00000088, 0x00000000, 0x00000000, 0x00000060, 0x0000001c, 0x00000053, 
    0xfffe0300, 0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 
    0x00020000, 0x00040000, 0x0000003c, 0x00000000, 0x7472616e, 0x73666f72, 
    0x6d00abab, 0x00030003, 0x00040004, 0x00010000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x31313139, 0x2e3000ab, 0x00000000, 0x000000a8, 
    0x00210003, 0x00000000, 0x00000000, 0x00002063, 0x00000001, 0x00000004, 
    0x00000003, 0x00000290, 0x00105003, 0x00015004, 0x00025005, 0x00335006, 
    0x0000f050, 0x00013151, 0x00023252, 0x0000100c, 0x0000100a, 0x0000100b, 
    0xf0554003, 0x00001200, 0xc2000000, 0x00003007, 0x00001200, 0xc4000000, 
    0x0000300a, 0x00002200, 0x00000000, 0x05f83000, 0x00000fc8, 0x00000000, 
    0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 0x0000023f, 0x00000000, 
    0x05f80000, 0x00000fc8, 0x00000000, 0xc80f0002, 0x00b10000, 0x8b030102, 
    0xc80f0002, 0x006c0000, 0xab030002, 0xc80f803e, 0x00000000, 0xa0020300, 
    0xc8038001, 0x001a1a00, 0xe2000000, 0xc8038002, 0x00b0b000, 0xe2000000, 
    0xc80f8000, 0x00000000, 0xe2010100, 0x00000000, 0x00000000, 0x00000000
};
